services:
  
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver-usertransactions
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Developer
      - MSSQL_DATABASE=userTransactions
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - network-usertransactions
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "YourStrong@Passw0rd" -Q "SELECT 1" -C || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper-usertransactions
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - network-usertransactions

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-usertransactions
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - network-usertransactions
    healthcheck:
      test: kafka-broker-api-versions --bootstrap-server localhost:9092
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 15s

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui-usertransactions
    ports:
      - "9090:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=Local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_READONLY=false
      - DYNAMIC_CONFIG_ENABLED=true
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - network-usertransactions

  api-usertransactions:
    build:
      context: .
      dockerfile: src/Backend/UserTransactions.API/Dockerfile
    container_name: api-usertransactions
    depends_on:
      sqlserver:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=userTransactions;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True;
      - Kafka__BootstrapServers=kafka:29092
      - Kafka__SecurityProtocol=Plaintext
      - Kafka__ClientId=API-UserTransactions
      - Kafka__EnableIdempotence=true
      - Kafka__Acks=All
      - Kafka__MessageTimeoutMs=5000
      - Kafka__RequestTimeoutMs=30000
      - RunMigrations=true
      - HealthCheck__KafkaUIUrl=http://kafka-ui-usertransactions:8080/actuator/health
      - HealthCheck__KafkaUrl=kafka:29092
      - HealthCheck__SqlServerUrl=Server=sqlserver;Database=userTransactions;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True;
      - HealthCheck__KafkaHealthTopic=health-check
    networks:
      - network-usertransactions
    restart: unless-stopped
  
  consumer-usertransactions:
    build:
      context: .
      dockerfile: src/Consumer/UserTransactions.Consumer/Dockerfile
    container_name: consumer-usertransactions
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8084:8084"
      - "8085:8085"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Kafka__BootstrapServers=kafka:29092
      - Kafka__SecurityProtocol=Plaintext
      - Kafka__ClientId=API-UserTransactions
      - Kafka__EnableIdempotence=true
      - Kafka__Acks=All
      - Kafka__MessageTimeoutMs=5000
      - Kafka__RequestTimeoutMs=30000
      - SendGrid__ApiKey=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
      - SendGrid__FromEmail=flaviotricolor39@gmail.com
      - SendGrid__FromName=flaviojcf
    networks:
      - network-usertransactions
    restart: unless-stopped

  frontend-usertransactions:
    build:
      context: src/Frontend/usertransactions-web
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_BASE_URL: http://api-usertransactions:8080/v1
        NEXT_PUBLIC_API_URL_HEALTH: http://api-usertransactions:8080/health
    container_name: frontend-usertransactions
    depends_on:
      - api-usertransactions
    ports:
      - "3000:3000"
    networks:
      - network-usertransactions
    restart: unless-stopped

volumes:
  sqlserver_data:

networks:
  network-usertransactions:
    driver: bridge